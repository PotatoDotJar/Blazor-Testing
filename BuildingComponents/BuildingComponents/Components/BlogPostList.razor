@using BuildingComponents.Data.Entities;
@using BuildingComponents.Services;
@inject BlogService blogService;
@inject NavigationManager navigation;

@if(Posts != null)
{
    <div class="list-group">
        @foreach (var post in Posts)
        {
            <BlogPostListItem Post="@post" OnPostEdit="@OnPostEdit" OnPostDelete="@OnPostDelete"></BlogPostListItem>
        }
    </div>
}
else
{
    <p>Loading posts...</p>
}


@code {
    private IEnumerable<Post>? Posts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdatePosts();
    }

    protected async Task UpdatePosts()
    {
        Posts = await blogService.GetBlogPostsAsync();
    }

    protected void OnPostEdit(Post? postToEdit)
    {
        if (postToEdit != null)
        {
            navigation.NavigateTo($"/editpost/{postToEdit.PostId}");
        }
    }

    protected async Task OnPostDelete(Post? postToDelete)
    {
        if (postToDelete != null)
        {
            await blogService.DeletePostAsync(postToDelete.PostId);
        }
        
        await UpdatePosts();
    }
}
